{"version":3,"sources":["components/user/BusinessBulkAddressPopup.jsx","pages/dashboard/BusinessAddress.jsx","svgComponents/BinIcon.jsx"],"names":["BusinessBulkAddressPopup","props","onClose","addressData","open","businessId","userId","axiosPrivate","useAxiosPrivate","queryClient","useQueryClient","enqueueSnackbar","useSnackbar","handleClose","addressSchema","Yup","shape","addressDetails","of","email","required","mobile","matches","min","businessName","businessLocationName","physicalAddress","description","longitude","latitude","formik","useFormik","initialValues","validationSchema","onSubmit","values","Promise","r","setTimeout","map","val","includes","obj","mutateAsync","useMutation","data","post","BUSINESS_API_URL","businessBulkAddress","JSON","stringify","onSuccess","variant","anchorOrigin","vertical","horizontal","autoHideDuration","invalidateQueries","onError","error","errorData","response","errors","Object","keys","forEach","key","setFieldError","touched","handleSubmit","Modal","Box","className","onClick","value","autoComplete","noValidate","name","remove","length","friend","index","AppTooltip","title","placement","IconButton","sx","color","customeName","label","component","PhoneInputs","Boolean","_","get","helperText","Number","FormHelperText","render","field","form","TextField","fullWidth","type","BusinessAddress","useState","businessData","setBusinessData","navigate","useNavigate","state","useLocation","id","setid","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","loding","setLoding","array","setArray","bulkAddressPopup","setBulkAddressPopup","useEffect","StyledTableRow","styled","TableRow","backgroundColor","background","border","useQuery","a","signal","getBusinessAddress","_id","then","res","refetchOnWindowFocus","addressList","refetch","deleteAddress","delete","deteleBusinessAddress","status","LoadingScreen","Stack","direction","spacing","Button","PATH_DASHBOARD","general","businessAddressAdd","style","fontSize","hidden","accept","onInput","e","file","target","files","split","pop","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","processData","readAsBinaryString","Dialog","DialogTitle","DialogContent","DialogActions","autoFocus","Card","TableContainer","Table","UserListHead","headLabel","alignRight","TableBody","row","i","TableCell","scope","align","moment","createdAt","format","bgcolor","businessAddressUpdate","businessAddressData","EditPenIcon","primaryAddress","Id","BinIcon","colSpan","py","isEmpty","width","height","viewBox","fill","xmlns","d"],"mappings":"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","file":"static/js/32.49b80c97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Button, Modal } from \"@mui/material\";\r\nimport * as Yup from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {\r\n  Field,\r\n  Form,\r\n  FieldArray,\r\n  FormikProvider,\r\n  useFormik,\r\n} from \"formik\";\r\nimport PhoneInputs from 'src/pages/dashboard/input/PhoneInputs';\r\nimport _ from \"lodash\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AppTooltip from \"../common/AppTooltip\";\r\nimport { FormHelperText, TextField } from \"@mui/material\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport useAxiosPrivate from \"src/hooks/useAxiosPrivate\";\r\nimport { BUSINESS_API_URL } from \"src/api/axios\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n//TODO::Filed Warning Solve to @nikunj\r\nconst BusinessBulkAddressPopup = (props) => {\r\n  const { onClose, open, addressData, businessId, userId } = props;\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const queryClient = useQueryClient();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const addressSchema = Yup.object().shape({\r\n    addressDetails: Yup.array().of(\r\n      Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"email must be a valid email address\")\r\n          .required(\"email is required\"),\r\n        mobile: Yup.string().matches(\r\n          /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{2,50})?$/,\r\n          \"invalid mobile number!.\"\r\n        ).min(10, \"invalid Mobile Number!\").required(\"mobile number is required\"),\r\n        businessName: Yup.mixed().required(\"businessName is required\"),\r\n        businessLocationName: Yup.mixed().required(\r\n          \"busibess locationname is required\"\r\n        ),\r\n        physicalAddress: Yup.mixed().required(\"physical address is required\"),\r\n        description: Yup.mixed().required(\"description is required\"),\r\n        longitude: Yup.string()\r\n          .matches(\r\n            /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{2,50})?$/,\r\n            \"not valid.\"\r\n          )\r\n          .required(\"longitude is required\"),\r\n        latitude: Yup.string()\r\n          .matches(\r\n            /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{2,50})?$/,\r\n            \"not valid.\"\r\n          )\r\n          .required(\"latitude is required\"),\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      addressDetails: addressData,\r\n    },\r\n    validationSchema: addressSchema,\r\n    onSubmit: async (values) => {\r\n      await new Promise((r) => setTimeout(r, 500));\r\n      values.addressDetails.map((val) => {\r\n        return val.mobile = val.mobile.includes(\"+\") ? val.mobile : \"+\" + val.mobile\r\n      })\r\n      const obj = {\r\n        addressDetails: values.addressDetails,\r\n        businessId: businessId,\r\n        userId: userId\r\n      }\r\n      await mutateAsync(obj);\r\n    },\r\n  });\r\n\r\n  const { mutateAsync } = useMutation(\r\n    async (data) => {\r\n      return await axiosPrivate.post(\r\n        BUSINESS_API_URL.businessBulkAddress,\r\n        JSON.stringify(data)\r\n      );\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        onClose();\r\n        enqueueSnackbar(\"bulk address add successfully\", {\r\n          variant: \"success\",\r\n          anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n          autoHideDuration: 2000,\r\n        });\r\n        queryClient.invalidateQueries([\"businessAddressList\"]);\r\n      },\r\n      onError: (error) => {\r\n        const errorData = error.response.data.errors;\r\n        Object.keys(errorData).forEach((key) => {\r\n          setFieldError(key, errorData[key]);\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const {\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    setFieldError,\r\n    values,\r\n  } = formik;\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={true}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"child-modal-title\"\r\n        aria-describedby=\"child-modal-description\"\r\n      >\r\n        <Box className=\"modal_card modal_lg\">\r\n          <div className=\"modal_card_header\">\r\n            <div className=\"left_part\">\r\n              <h4>add bulk address</h4>\r\n            </div>\r\n            <div className=\"right_part\">\r\n              <Button className=\"dashboard_light_bg_icon_btn\" onClick={handleClose} aria-label=\"delete\">\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal_card_body custom_scrollbar max_hight500\">\r\n            <FormikProvider value={formik}>\r\n              <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <FieldArray name=\"addressDetails\">\r\n                  {({ remove }) => (\r\n                    <div>\r\n                      {values.addressDetails.length > 0 &&\r\n                        values.addressDetails.map((friend, index) => (\r\n                          <div key={index}>\r\n                            <br></br>\r\n                            <span className=\"app_text_grey\">\r\n                              address {index + 1}\r\n                            </span>\r\n                            <AppTooltip\r\n                              title={\"delete address\"}\r\n                              placement={\"bottom\"}\r\n                            >\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                sx={{ color: \"red\" }}\r\n                                onClick={() => remove(index)}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                            </AppTooltip>\r\n                            <div className=\"row row-cols-1 g-4\">\r\n                              <div className=\"col\">\r\n                                <Field\r\n                                  customeName={`addressDetails.${index}.mobile`}\r\n                                  name={`addressDetails.${index}.mobile`}\r\n                                  label=\"enter your mobile number\"\r\n                                  component={PhoneInputs}\r\n                                  error={Boolean(_.get(touched, `addressDetails.${index}.mobile`, false) &&\r\n                                    _.get(errors, `addressDetails.${index}.mobile`, false)\r\n                                  )}\r\n                                  helperText={\r\n                                    _.get(touched, `addressDetails.${index}.mobile`, false) &&\r\n                                    _.get(errors, `addressDetails.${index}.mobile`, false)\r\n                                  }\r\n                                  data={addressData[index].mobile && Number(addressData[index].mobile) ? \"+\" + addressData[index].mobile : null}\r\n                                />\r\n                                <FormHelperText error>\r\n                                  {_.get(touched,\r\n                                    `addressDetails.${index}.mobile`,\r\n                                    false\r\n                                  ) &&\r\n                                    _.get(\r\n                                      errors,\r\n                                      `addressDetails.${index}.mobile`,\r\n                                      false\r\n                                    )}\r\n                                </FormHelperText>\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <div className=\"d-flex\">\r\n                                  <Field\r\n                                    name={`addressDetails.${index}.businessName`}\r\n                                    render={({ field, form }) => (\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        label=\"business name\"\r\n                                        {...field}\r\n                                        error={Boolean(\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        )}\r\n                                        helperText={\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        }\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                  <Field\r\n                                    name={`addressDetails.${index}.email`}\r\n                                    render={({ field, form }) => (\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        label=\"email\"\r\n                                        className=\"ms-2\"\r\n                                        variant=\"outlined\"\r\n                                        {...field}\r\n                                        error={Boolean(\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        )}\r\n                                        helperText={\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        }\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <Field\r\n                                  name={`addressDetails.${index}.businessLocationName`}\r\n                                  render={({ field, form }) => (\r\n                                    <TextField\r\n                                      fullWidth\r\n                                      variant=\"outlined\"\r\n                                      label=\"business address\"\r\n                                      {...field}\r\n                                      error={Boolean(\r\n                                        _.get(touched, field.name, false) &&\r\n                                        _.get(errors, field.name, false)\r\n                                      )}\r\n                                      helperText={\r\n                                        _.get(touched, field.name, false) &&\r\n                                        _.get(errors, field.name, false)\r\n                                      }\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <Field\r\n                                  name={`addressDetails.${index}.physicalAddress`}\r\n                                  render={({ field, form }) => (\r\n                                    <TextField\r\n                                      fullWidth\r\n                                      variant=\"outlined\"\r\n                                      label=\"physical address\"\r\n                                      {...field}\r\n                                      error={Boolean(\r\n                                        _.get(touched, field.name, false) &&\r\n                                        _.get(errors, field.name, false)\r\n                                      )}\r\n                                      helperText={\r\n                                        _.get(touched, field.name, false) &&\r\n                                        _.get(errors, field.name, false)\r\n                                      }\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <div className=\"d-flex\">\r\n                                  <Field\r\n                                    name={`addressDetails.${index}.longitude`}\r\n                                    render={({ field, form }) => (\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        label=\"longitude\"\r\n                                        {...field}\r\n                                        error={Boolean(\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        )}\r\n                                        helperText={\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        }\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                  <Field\r\n                                    name={`addressDetails.${index}.latitude`}\r\n                                    render={({ field, form }) => (\r\n                                      <TextField\r\n                                        className=\"ms-2\"\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        label=\"latitude\"\r\n                                        {...field}\r\n                                        error={Boolean(\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        )}\r\n                                        helperText={\r\n                                          _.get(touched, field.name, false) &&\r\n                                          _.get(errors, field.name, false)\r\n                                        }\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <Field\r\n                                  name={`addressDetails.${index}.description`}\r\n                                  render={({ field, form }) => (\r\n                                    <TextField\r\n                                      fullWidth\r\n                                      variant=\"outlined\"\r\n                                      label=\"description\"\r\n                                      {...field}\r\n                                      error={Boolean(\r\n                                        _.get(touched, field.name, false) &&\r\n                                        _.get(errors, field.name, false)\r\n                                      )}\r\n                                      helperText={\r\n                                        _.get(touched, field.name, false) &&\r\n                                        _.get(errors, field.name, false)\r\n                                      }\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              </div>\r\n\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  )}\r\n                </FieldArray>\r\n                <div className=\"col\">\r\n                  <div className=\"col-md-8 m-auto\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      className=\"my-3 text-lowercase text-white app_bg_primary app_text_16_semibold app_btn_lg\"\r\n                    >\r\n                      submit\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </FormikProvider>\r\n          </div>\r\n          <div className=\"modal_card_footer\"></div>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nBusinessBulkAddressPopup.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BusinessBulkAddressPopup;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Table, TableBody, TableCell, TableContainer, TableRow, Button } from \"@material-ui/core\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router\";\r\nimport { PATH_DASHBOARD } from 'src/routes/paths';\r\nimport UserListHead from \"src/components/user/UserListHead\";\r\nimport { styled } from '@mui/material/styles';\r\nimport moment from 'moment'\r\nimport EditPenIcon from 'src/svgComponents/EditPenIcon'\r\nimport Stack from '@mui/material/Stack';\r\nimport AppTooltip from \"src/components/common/AppTooltip\";\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport BinIcon from 'src/svgComponents/BinIcon'\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useSnackbar } from \"notistack\";\r\nimport useAxiosPrivate from \"src/hooks/useAxiosPrivate\";\r\nimport { BUSINESS_API_URL } from \"src/api/axios\";\r\nimport { useQuery } from 'react-query';\r\nimport LoadingScreen from 'src/components/LoadingScreen'\r\nimport BusinessBulkAddressPopup from \"src/components/user/BusinessBulkAddressPopup\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { processData } from \"src/helpers/helpers\";\r\nimport _ from \"lodash\";\r\n\r\nconst BusinessAddress = () => {\r\n    const [businessData, setBusinessData] = useState();\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const axiosPrivate = useAxiosPrivate();\r\n    const [id, setid] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n    const [loding, setLoding] = useState(true);\r\n    const [array, setArray] = useState([]);\r\n    const [bulkAddressPopup, setBulkAddressPopup] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setBusinessData(state?.businessData)\r\n        setTimeout(() => {\r\n            setLoding(false);\r\n        }, 1800);\r\n    }, [state]);\r\n\r\n    const handleClickOpen = (Id) => {\r\n        setid(Id);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const TABLE_HEAD = [\r\n        { id: 'name', label: 'address name', alignRight: false },\r\n        { id: 'email', label: 'email', alignRight: false },\r\n        { id: 'mobile', label: 'mobile', alignRight: false },\r\n        { id: 'createdAt', label: 'date', alignRight: false },\r\n        { id: 'action', label: 'action', alignRight: false },\r\n    ];\r\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: '#ffffff',\r\n        },\r\n        '&:nth-of-type(even)': {\r\n            background: \"linear-gradient(0deg, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6)), #F4F5F7\",\r\n        },\r\n        // hide last border\r\n        '& td, & th': {\r\n            border: 0,\r\n        },\r\n    }));\r\n\r\n    const { data: addressList, refetch } = useQuery(\r\n        \"addressList\",\r\n        async ({ signal }) => {\r\n            return await axiosPrivate\r\n                .get(BUSINESS_API_URL.getBusinessAddress + state?.businessData?._id, { signal })\r\n                .then((res) => res.data);\r\n        },\r\n        { refetchOnWindowFocus: false }\r\n    );\r\n    const handleRequestBusinessAddressEdit = (data) => {\r\n        navigate(PATH_DASHBOARD.general.businessAddressUpdate, { state: { businessAddressData: data } });\r\n    };\r\n\r\n    const handleRequestBusinessAdd = () => {\r\n        navigate(PATH_DASHBOARD.general.businessAddressAdd, { state: { data: { userId: businessData?.userId, businessId: businessData?._id } } });\r\n    };\r\n\r\n    const deleteAddress = async () => {\r\n        handleClose();\r\n        const response = await axiosPrivate.delete(BUSINESS_API_URL.deteleBusinessAddress + id)\r\n        if (response.status == 200) {\r\n            enqueueSnackbar(\"address delete successfully\", {\r\n                variant: \"success\",\r\n                anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n                autoHideDuration: 2000,\r\n            });\r\n        } else {\r\n            enqueueSnackbar(\"something went wrong\", {\r\n                variant: \"error\",\r\n                anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n                autoHideDuration: 2000,\r\n            });\r\n        }\r\n        refetch();\r\n    };\r\n\r\n    const handleBulkAddressClose = (value) => {\r\n        refetch();\r\n        setBulkAddressPopup(false);\r\n        setArray([])\r\n    };\r\n\r\n    const handleAddressFileOnChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return false\r\n        if ([\"xlsx\", \"csv\"].includes(file.name.split(\".\").pop())) {\r\n            const reader = new FileReader();\r\n            reader.onload = (evt) => {\r\n                /* Parse data */\r\n                const bstr = evt.target.result;\r\n                const wb = XLSX.read(bstr, { type: \"binary\" });\r\n                /* Get first worksheet */\r\n                const wsname = wb.SheetNames[0];\r\n                const ws = wb.Sheets[wsname];\r\n                /* Convert array of arrays */\r\n                const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n                setArray(processData(data));\r\n                setBulkAddressPopup(true);\r\n            };\r\n            reader.readAsBinaryString(file);\r\n        } else {\r\n            setBulkAddressPopup(false);\r\n            enqueueSnackbar(\"only accept Xlsx and csv file.\", {\r\n                variant: \"error\",\r\n                anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n                autoHideDuration: 2000,\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {loding ? <LoadingScreen /> : <>\r\n                <div className=\"dashboard_header mb-4\">\r\n                    <h4 className=\"app_text_20_semibold mb-0 d-flex align-items-center\">user business address</h4>\r\n                    <Stack direction={\"row\"} className=\"d-flex align-items-center\" spacing={2}>\r\n                        <AppTooltip title=\"add business address\" placement=\"bottom\"><Button className=\"dashboard_light_bg_icon_btn\" onClick={() => handleRequestBusinessAdd()}\r\n                        ><AddCircleOutlineOutlinedIcon style={{ fontSize: 18, color: \"#6200ee\" }} /></Button></AppTooltip>\r\n                        <AppTooltip title=\"add bulk business address\" placement=\"bottom\"><Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            className='my-3 text-capitalize app_bg_primary_medium app_text_primary app_text_16_semibold app_btn_lg'\r\n                            component='label'>\r\n                            <input hidden name='document' accept=' .xlsx,.csv' onInput={handleAddressFileOnChange} type='file' />\r\n                            add bulk address\r\n                        </Button></AppTooltip>\r\n                    </Stack>\r\n                </div>\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"responsive-dialog-title\" className='m-auto'>\r\n                        {\"are you sure you want to delete?\"}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                    </DialogContent>\r\n                    <DialogActions className='m-auto'>\r\n                        <Button className=\"theme_button_view\" variant=\"contained\" autoFocus onClick={handleClose}>\r\n                            cancel\r\n                        </Button>\r\n                        <Button className=\"theme_button\" variant=\"contained\" onClick={() => deleteAddress()} autoFocus>\r\n                            delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Card>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <UserListHead\r\n                                headLabel={TABLE_HEAD}\r\n                            />\r\n                            {addressList?.length > 0 ?\r\n                                <TableBody>\r\n                                    {addressList?.map((row, i) => {\r\n                                        return (\r\n                                            <StyledTableRow key={i}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row?.physicalAddress}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row?.email}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    {row?.mobile}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    {moment(row.createdAt).format(\"MMM DD YYYY h:mm A\")}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <Stack direction=\"row\" spacing={1}>\r\n                                                        <AppTooltip title=\"business address edit\" placement=\"bottom\" ><Button sx={{ \"&:hover\": { bgcolor: \"transparent\" } }}\r\n                                                            onClick={() => handleRequestBusinessAddressEdit(row)}\r\n                                                            variant=\"text\" className=\"user_list_row_btn\"><EditPenIcon /></Button></AppTooltip>\r\n                                                        {row?.primaryAddress ? \"\" : <AppTooltip title=\"business address delete\" placement=\"bottom\"><Button variant=\"text\" className=\"user_list_row_btn\"\r\n                                                            onClick={() => handleClickOpen(row._id)}><BinIcon /></Button></AppTooltip>}\r\n                                                    </Stack>\r\n                                                </TableCell>\r\n                                            </StyledTableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                                :\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\" colSpan={5} sx={{ py: 5 }}>\r\n                                            <span className=\"app_text_16_semibold\">no data found</span>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>}\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Card>\r\n                {!_.isEmpty(array) && <BusinessBulkAddressPopup addressData={array} businessId={businessData?._id} userId={businessData?.userId} open={bulkAddressPopup} onClose={handleBulkAddressClose} />}\r\n            </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BusinessAddress","import React from 'react'\r\n\r\nconst BinIcon = () => {\r\n    return (\r\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M5.625 2.875H5.5C5.56875 2.875 5.625 2.81875 5.625 2.75V2.875H10.375V2.75C10.375 2.81875 10.4312 2.875 10.5 2.875H10.375V4H11.5V2.75C11.5 2.19844 11.0516 1.75 10.5 1.75H5.5C4.94844 1.75 4.5 2.19844 4.5 2.75V4H5.625V2.875ZM13.5 4H2.5C2.22344 4 2 4.22344 2 4.5V5C2 5.06875 2.05625 5.125 2.125 5.125H3.06875L3.45469 13.2969C3.47969 13.8297 3.92031 14.25 4.45312 14.25H11.5469C12.0813 14.25 12.5203 13.8313 12.5453 13.2969L12.9312 5.125H13.875C13.9438 5.125 14 5.06875 14 5V4.5C14 4.22344 13.7766 4 13.5 4Z\" fill=\"#d40f0f\" />\r\n            <path d=\"M11.4266 13.125H4.57344L4.19531 5.125H11.8047L11.4266 13.125Z\" fill=\"white\" />\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nexport default BinIcon"],"sourceRoot":""}
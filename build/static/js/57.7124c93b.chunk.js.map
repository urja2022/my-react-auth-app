{"version":3,"sources":["pages/dashboard/UserIdVerification.jsx"],"names":["require","UserIdVerification","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","filterName","setFilterName","tableData","setTableData","axiosPrivate","useAxiosPrivate","loding","setLoding","enqueueSnackbar","useSnackbar","permissionsData","useStore","state","permissions","StyledTableRow","styled","TableRow","theme","backgroundColor","background","border","getUsersIdVerificationData","get","USER_API_URL","getUserIdVerification","params","search","limit","response","data","useQuery","keepPreviousData","isLoading","UsersIdVerificationList","refetch","useEffect","metadata","length","hasMoreData","setTimeout","updateIdVerificationRequest","status","id","put","updateUserIdVerification","userId","variant","anchorOrigin","vertical","horizontal","autoHideDuration","className","fullWidth","sx","flex","placeholder","onChange","e","target","value","trim","replace","direction","spacing","title","placement","style","fontSize","color","headLabel","label","alignRight","rowCount","total","onRequestSort","event","property","map","row","i","component","scope","userName","fullName","align","email","mobile","trustLevel","moment","createdAt","format","business_request","substring","onClick","colSpan","py","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/57.7124c93b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { IconButton, InputBase, Paper, Card, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { styled } from '@mui/material/styles';\r\nimport RefreshOutlinedIcon from '@mui/icons-material/RefreshOutlined';\r\nimport { useQuery } from 'react-query';\r\nimport { USER_API_URL } from \"src/api/axios\";\r\nimport UserListHead from \"src/components/user/UserListHead\";\r\nimport useAxiosPrivate from \"src/hooks/useAxiosPrivate\";\r\nimport { Stack } from \"@mui/material\";\r\nimport SearchIcon from \"src/svgComponents/SearchIcon\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useStore from 'src/contexts/AuthProvider'\r\nimport LoadingScreen from 'src/components/LoadingScreen'\r\nimport moment from 'moment'\r\nimport AppTooltip from \"src/components/common/AppTooltip\";\r\nimport { Button, Chip } from \"@mui/material\";\r\n\r\nconst _ = require('lodash');\r\n\r\nexport default function UserIdVerification() {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('name');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [tableData, setTableData] = useState([]);\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const [loding, setLoding] = useState(true);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const permissionsData = useStore(state => state.permissions);\r\n\r\n  const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: '#ffffff',\r\n\r\n    },\r\n    '&:nth-of-type(even)': {\r\n      background: \"linear-gradient(0deg, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6)), #F4F5F7\",\r\n    },\r\n    // hide last border\r\n    '& td, & th': {\r\n      border: 0,\r\n    },\r\n  }));\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'userName', label: 'name', alignRight: false },\r\n    { id: 'fullName', label: 'full name', alignRight: false },\r\n    { id: 'email', label: 'email', alignRight: false },\r\n    { id: 'mobile', label: 'mobile number', alignRight: false },\r\n    { id: 'isApprove', label: 'status', alignRight: false },\r\n    { id: 'createdAt', label: 'date', alignRight: false },\r\n    { id: 'action', label: 'action', alignRight: false },\r\n  ];\r\n\r\n  async function getUsersIdVerificationData(page, filterName) {\r\n    const response = await axiosPrivate.get(USER_API_URL.getUserIdVerification, { params: { page: page + 1, search: filterName, limit: rowsPerPage } })\r\n    return response.data[0];\r\n  }\r\n\r\n  const { isLoading, data: UsersIdVerificationList, refetch } = useQuery(['UsersIdVerificationList', page, filterName], () => getUsersIdVerificationData(page, filterName), { keepPreviousData: true, })\r\n\r\n  useEffect(() => {\r\n    if (UsersIdVerificationList) {\r\n      setTableData(UsersIdVerificationList?.data);\r\n      setRowsPerPage(UsersIdVerificationList?.metadata.length != 0 ? UsersIdVerificationList?.metadata[0].limit : 10);\r\n    }\r\n    if (UsersIdVerificationList?.metadata.length != 0 && UsersIdVerificationList?.metadata[0].hasMoreData == true) {\r\n      getUsersIdVerificationData(page + 1);\r\n    }\r\n    setTimeout(() => {\r\n      setLoding(false);\r\n    }, 1800);\r\n  }, [UsersIdVerificationList])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    setTimeout(() => {\r\n      refetch();\r\n    }, 500);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value.trim().replace('+', ''));\r\n    getUsersIdVerificationData(page, filterName);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  async function updateIdVerificationRequest(status, id) {\r\n    const response = await axiosPrivate.put(USER_API_URL.updateUserIdVerification, { userId: id, status: status })\r\n    if (response.status == 200) {\r\n      enqueueSnackbar(\"status change successfully \", {\r\n        variant: \"success\",\r\n        anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n        autoHideDuration: 2000,\r\n      });\r\n    } else {\r\n      enqueueSnackbar(\"something went wrong\", {\r\n        variant: \"error\",\r\n        anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n        autoHideDuration: 2000,\r\n      });\r\n    }\r\n    refetch();\r\n  }\r\n\r\n  if (isLoading) return <LoadingScreen />\r\n\r\n  return (\r\n    <>\r\n      {loding ? <LoadingScreen /> : <>\r\n        <div className=\"dashboard_header mb-4\">\r\n          {/* <h4 className=\"app_text_20_semibold mb-0 d-flex align-items-center\">Users</h4> */}\r\n          <Paper className='dashboard_searchbox col-lg-4'>\r\n            <IconButton>\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              fullWidth\r\n              sx={{ flex: 1 }}\r\n              placeholder=\"search users ...\"\r\n              onChange={(e) => handleFilterByName(e)}\r\n            />\r\n          </Paper>\r\n\r\n          <Stack direction={\"row\"} className=\"d-flex align-items-center\" spacing={2}>\r\n\r\n            <AppTooltip title=\"refresh\" placement=\"bottom\"><Button className=\"dashboard_light_bg_icon_btn\"><RefreshOutlinedIcon style={{ fontSize: 18, color: \"#6200ee\" }} /></Button></AppTooltip>\r\n          </Stack>\r\n        </div>\r\n\r\n        <Card>\r\n          <TableContainer>\r\n            <Table>\r\n              <UserListHead\r\n                headLabel={TABLE_HEAD}\r\n                rowCount={UsersIdVerificationList?.metadata.length !== 0 ? UsersIdVerificationList?.metadata[0].total : 0}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n              {tableData.length > 0 ?\r\n                <TableBody>\r\n                  {tableData.map((row, i) => {\r\n                    return (\r\n                      <StyledTableRow key={i}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.userName ?? \"-\"}\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.fullName ?? \"-\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">  {row?.email ?? \"-\"}</TableCell>\r\n                        <TableCell align=\"left\">  {row?.mobile ?? \"-\"}</TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row?.trustLevel?.id === 1 ? <Chip label=\"pending\" className=\"app_status_chip pending\" /> : row?.trustLevel?.id === 2 ? <Chip label=\"invalid\" className=\"app_status_chip invalid\" /> : <Chip label=\"accepted\" className=\"app_status_chip accepted\" />}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\"> {moment(row.createdAt).format(\"MMM DD YYYY h:mm A\")}</TableCell>\r\n                        <TableCell>\r\n                          <Stack direction=\"row\" spacing={3}>\r\n                            {/* <AppTooltip title=\"view business details\" placement=\"bottom\"><Button className=\"theme_button_view\" variant=\"contained\" onClick={(e) => handleRequestView(row)}>view</Button></AppTooltip> */}\r\n                            {permissionsData?.business_request?.substring(3, 4) == \"1\" ?\r\n                              <>\r\n                                <AppTooltip title=\"accept user id-verification\" placement=\"bottom\"><Button className=\"theme_button\" variant=\"contained\" onClick={(e) => updateIdVerificationRequest(1, row.id)}>accept</Button></AppTooltip>\r\n                                <AppTooltip title=\"reject user id-verification\" placement=\"bottom\"><Button className=\"invalid_button\" variant=\"contained\" onClick={() => updateIdVerificationRequest(2, row.id)}\r\n                                >reject</Button></AppTooltip>\r\n                              </> : ''}\r\n                          </Stack>\r\n                        </TableCell>\r\n                      </StyledTableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n                :\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\" colSpan={7} sx={{ py: 5 }}>\r\n                      <span className=\"app_text_16_semibold\">no data found</span>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>}\r\n\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={[10, 20, 50, 100]}\r\n            count={UsersIdVerificationList?.metadata.length != 0 ? UsersIdVerificationList?.metadata[0].total : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </>\r\n      }\r\n    </>\r\n  )\r\n}"],"sourceRoot":""}
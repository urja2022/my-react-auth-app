{"version":3,"sources":["pages/dashboard/References.jsx"],"names":["require","References","useState","ref1PhoneNumber","setRef1PhoneNumber","ref2PhoneNumber","setRef2PhoneNumber","ref3PhoneNumber","setRef3PhoneNumber","phoneErrorRef1","setPhoneErrorRef1","phoneErrorRef2","setPhoneErrorRef2","phoneErrorRef3","setPhoneErrorRef3","axiosPrivate","useAxiosPrivate","enqueueSnackbar","useSnackbar","navigate","useNavigate","formik","useFormik","initialValues","ref1UserName","ref1Email","ref2UserName","ref2Email","ref3UserName","ref3Email","onSubmit","values","resetForm","setSubmitting","referaceData","name","email","mobile","referaceObj","filter","item","Object","keys","key","length","mutateAsync","useMutation","data","post","INDIVIDUAL_API_URL","reference","JSON","stringify","onSuccess","variant","anchorOrigin","vertical","horizontal","autoHideDuration","HOME_PAGE_PATH","root","onError","error","errorData","response","errors","forEach","handleSubmit","getFieldProps","value","autoComplete","noValidate","className","id","label","type","fullWidth","margin","containerClass","inputProps","style","width","country","onChange","phone"],"mappings":"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","file":"static/js/51.5a60d40e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, FormHelperText, TextField } from \"@mui/material\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport { useMutation } from \"react-query\";\r\nimport { INDIVIDUAL_API_URL } from \"src/api/axios\";\r\nimport { HOME_PAGE_PATH } from \"src/routes/paths\";\r\nimport useAxiosPrivate from \"src/hooks/useAxiosPrivate\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useNavigate } from \"react-router\";\r\nconst _ = require('lodash'); \r\n\r\nconst References = () => {\r\n  const [ref1PhoneNumber, setRef1PhoneNumber] = useState();\r\n  const [ref2PhoneNumber, setRef2PhoneNumber] = useState();\r\n  const [ref3PhoneNumber, setRef3PhoneNumber] = useState();\r\n  const [phoneErrorRef1, setPhoneErrorRef1] = useState(null);\r\n  const [phoneErrorRef2, setPhoneErrorRef2] = useState(null);\r\n  const [phoneErrorRef3, setPhoneErrorRef3] = useState(null);\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      ref1UserName: \"\",\r\n      ref1Email: \"\",\r\n      ref2UserName: \"\",\r\n      ref2Email: \"\",\r\n      ref3UserName: \"\",\r\n      ref3Email: \"\",\r\n    },\r\n    onSubmit: async (values, { resetForm, setSubmitting }) => {\r\n      const referaceData = [\r\n        {\r\n          name: values.ref1UserName,\r\n          email: values.ref1Email,\r\n          mobile: ref1PhoneNumber ? \"+\" + ref1PhoneNumber : \"\",\r\n        },\r\n        {\r\n          name: values.ref2UserName,\r\n          email: values.ref2Email,\r\n          mobile: ref2PhoneNumber ? \"+\" + ref2PhoneNumber : \"\",\r\n        },\r\n        {\r\n          name: values.ref3UserName,\r\n          email: values.ref3Email,\r\n          mobile: ref3PhoneNumber ? \"+\" + ref3PhoneNumber : \"\",\r\n        },\r\n      ];\r\n      const referaceObj = referaceData.filter((item) => Object.keys(item).filter((key) => item[key] !== \"\" ).length === 3);\r\n      mutateAsync(referaceObj);\r\n      setSubmitting(false);\r\n    },\r\n  });\r\n\r\n  const { mutateAsync } = useMutation(\r\n    async (data) => {\r\n      await axiosPrivate.post(\r\n        INDIVIDUAL_API_URL.reference,\r\n        JSON.stringify(data)\r\n      );\r\n    },\r\n    {\r\n      onSuccess: (data) => {\r\n        enqueueSnackbar(\"Reference Updated Successfully\", {\r\n          variant: \"success\",\r\n          anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n          autoHideDuration: 2000,\r\n        });\r\n        navigate(HOME_PAGE_PATH.root);\r\n      },\r\n      onError: (error) => {\r\n        const errorData = error.response.data.errors;\r\n        Object.keys(errorData).forEach((key) => {\r\n            if (key === \"reference.0.mobile\") {\r\n                setPhoneErrorRef1(errorData[key]);\r\n            }else if(key === \"reference.1.mobile\"){\r\n                setPhoneErrorRef2(errorData[key]);\r\n            }else if(key === \"reference.2.mobile\"){\r\n                setPhoneErrorRef3(errorData[key]);\r\n            }\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const { handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <>\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-11 col-xl-6\">\r\n                <h4 className=\"app_text_18_semibold\">References</h4>\r\n                <h4 className=\"app_text_16 app_text_gray\">\r\n                  Add your References\r\n                </h4>\r\n                <div className=\"row row-cols-1 g-5 mt-4\">\r\n                  <div className=\"col\">\r\n                    <h4 className=\"app_text_14_semibold app_text_black text-lowercase\">\r\n                      1st reference\r\n                    </h4>\r\n                    <TextField\r\n                      id=\"ref1UserName\"\r\n                      label=\"User Name\"\r\n                      type=\"text\"\r\n                      autoComplete=\"off\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      {...getFieldProps(\"ref1UserName\")}\r\n                    />\r\n                    <>\r\n                      <PhoneInput\r\n                        containerClass=\"mt-3 mb-2\"\r\n                        inputProps={{\r\n                          style: { width: \"100%\" },\r\n                          name: \"refPhone1\",\r\n                        }}\r\n                        country={\"au\"}\r\n                        onChange={(phone) => setRef1PhoneNumber(phone)}\r\n                      />\r\n                    <FormHelperText error={phoneErrorRef1 ? true : false}>\r\n                        {phoneErrorRef1}\r\n                    </FormHelperText>\r\n                    </>\r\n                    <TextField\r\n                      id=\"ref1Email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      autoComplete=\"off\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      {...getFieldProps(\"ref1Email\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <h4 className=\"app_text_14_semibold app_text_black text-lowercase\">\r\n                      2nd reference\r\n                    </h4>\r\n                    <TextField\r\n                      id=\"ref2UserName\"\r\n                      label=\"User Name\"\r\n                      type=\"text\"\r\n                      autoComplete=\"off\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      {...getFieldProps(\"ref2UserName\")}\r\n                    />\r\n                    <>\r\n                      <PhoneInput\r\n                        containerClass=\"mt-3 mb-2\"\r\n                        inputProps={{\r\n                          style: { width: \"100%\" },\r\n                          name: \"refPhone2\",\r\n                        }}\r\n                        country={\"au\"}\r\n                        onChange={(phone) => setRef2PhoneNumber(phone)}\r\n                      />\r\n                    <FormHelperText error={phoneErrorRef2 ? true : false}>\r\n                        {phoneErrorRef2}\r\n                    </FormHelperText>\r\n                    </>\r\n                    <TextField\r\n                      id=\"ref2Email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      autoComplete=\"off\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      {...getFieldProps(\"ref2Email\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <h4 className=\"app_text_14_semibold app_text_black text-lowercase\">\r\n                      3rd reference\r\n                    </h4>\r\n                    <TextField\r\n                      id=\"ref3UserName\"\r\n                      label=\"User Name\"\r\n                      type=\"text\"\r\n                      autoComplete=\"off\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      {...getFieldProps(\"ref3UserName\")}\r\n                    />\r\n                    <>\r\n                      <PhoneInput\r\n                        containerClass=\"mt-3 mb-2\"\r\n                        inputProps={{\r\n                          style: { width: \"100%\" },\r\n                          name: \"refPhone3\",\r\n                        }}\r\n                        country={\"au\"}\r\n                        onChange={(phone) => setRef3PhoneNumber(phone)}\r\n                      />\r\n                    <FormHelperText error={phoneErrorRef3 ? true : false}>\r\n                        {phoneErrorRef3}\r\n                    </FormHelperText>\r\n                    </>\r\n                    <TextField\r\n                      id=\"ref3Email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      autoComplete=\"off\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      {...getFieldProps(\"ref3Email\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      className=\"my-3 text-lowercase text-white app_bg_primary app_text_16_semibold app_btn_lg\"\r\n                    >\r\n                      Add References\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </FormikProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default References;\r\n"],"sourceRoot":""}
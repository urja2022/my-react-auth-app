{"version":3,"sources":["pages/dashboard/UserEvent.jsx"],"names":["BusinessEdit","axiosPrivate","useAxiosPrivate","useState","loding","setLoding","id","setId","enqueueSnackbar","useSnackbar","openLinkPopup","setOpenLinkPopup","permissionsData","useStore","state","permissions","useLocation","CsvData","setCsvData","navigate","useNavigate","StyledTableRow","styled","TableRow","theme","backgroundColor","background","border","useQuery","a","signal","get","USER_API_URL","userEventList","User_id","then","res","data","refetchOnWindowFocus","refetch","useEffect","arr","map","item","obj","title","description","eventDate","moment","format","time","duration","businessId","status","push","csvReport","headers","label","key","filename","put","eventInactive","variant","anchorOrigin","vertical","horizontal","autoHideDuration","setTimeout","handleActionPages","flug","PATH_DASHBOARD","general","eventDetails","eventData","userEventEdit","eventInvitedUserList","eventId","_id","className","direction","spacing","event","substring","placement","style","fontSize","color","headLabel","alignRight","length","row","today","dateTime","eventDateTime","component","scope","align","noOfGuest","isCancle","checked","onChange","handleChangeEventStatus","defaultChecked","sx","bgcolor","onClick","colSpan","py","newLinkId","open","onClose","value"],"mappings":"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","file":"static/js/56.58a772fb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Card, Table, Switch, TableBody, TableCell, TableContainer, TableRow } from \"@material-ui/core\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport useAxiosPrivate from \"src/hooks/useAxiosPrivate\";\r\nimport { USER_API_URL } from \"src/api/axios\";\r\nimport LoadingScreen from 'src/components/LoadingScreen'\r\nimport UserListHead from \"src/components/user/UserListHead\";\r\nimport moment from 'moment'\r\nimport { styled } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport AppTooltip from 'src/components/common/AppTooltip';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useSnackbar } from \"notistack\";\r\nimport EventBlockUserPopup from 'src/components/user/EventBlockUserPopup';\r\nimport useStore from 'src/contexts/AuthProvider';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { CSVLink } from \"react-csv\";\r\nimport FileUploadOutlinedIcon from '@mui/icons-material/FileUploadOutlined';\r\nimport { PATH_DASHBOARD } from 'src/routes/paths';\r\nimport { Chip } from '@mui/material';\r\nimport EditPenIcon from 'src/svgComponents/EditPenIcon';\r\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\r\n\r\nconst BusinessEdit = () => {\r\n    const axiosPrivate = useAxiosPrivate();\r\n    const [loding, setLoding] = useState(true);\r\n    const [id, setId] = useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [openLinkPopup, setOpenLinkPopup] = useState(false);\r\n    const permissionsData = useStore(state => state.permissions);\r\n    const { state } = useLocation();\r\n    const [CsvData, setCsvData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: '#ffffff',\r\n        },\r\n        '&:nth-of-type(even)': {\r\n            background: \"linear-gradient(0deg, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6)), #F4F5F7\",\r\n        },\r\n        // hide last border\r\n        '& td, & th': {\r\n            border: 0,\r\n        },\r\n    }));\r\n\r\n    const TABLE_HEAD = [\r\n        { id: 'title', label: 'title', alignRight: false },\r\n        { id: 'eventDate', label: 'event date', alignRight: false },\r\n        { id: 'time', label: 'event time', alignRight: false },\r\n        { id: 'duration', label: 'duration', alignRight: false },\r\n        { id: 'type', label: 'type', alignRight: false },\r\n        { id: 'noOfGuest', label: 'total no. of guest', alignRight: false },\r\n        { id: 'event status', label: 'event status', alignRight: false },\r\n        { id: 'status', label: 'status', alignRight: false },\r\n        { id: 'action', label: 'action', alignRight: false },\r\n    ];\r\n\r\n    const { data: userEventList, refetch } = useQuery(\r\n        \"userEventList\",\r\n        async ({ signal }) => {\r\n            return await axiosPrivate\r\n                .get(USER_API_URL.userEventList + \"?userId=\" + state?.User_id, { signal })\r\n                .then((res) => res.data);\r\n        },\r\n        { refetchOnWindowFocus: false }\r\n    );\r\n\r\n    useEffect(() => {\r\n        var arr = [];\r\n        userEventList?.map((item) => {\r\n            var obj = {\r\n                \"title\": item?.title ? item?.title : '',\r\n                \"description\": item?.description ? item?.description : '',\r\n                \"event date\": item?.eventDate ? moment(item?.eventDate).format(\"MMM DD YYYY h:mm A\") : '',\r\n                \"event time\": item?.time ? item?.time : '',\r\n                \"duration\": item?.duration ? item?.duration + ' days' : '',\r\n                \"type\": item?.businessId ? 'business' : 'user',\r\n                \"status\": item?.status == 1 ? 'enable' : 'disable',\r\n            }\r\n            arr.push(obj);\r\n        })\r\n        setCsvData(arr)\r\n    }, [userEventList]);\r\n\r\n    const headers = [\r\n        { label: 'title', key: \"title\" },\r\n        { label: 'description', key: \"description\" },\r\n        { label: 'event date', key: \"event date\" },\r\n        { label: 'event time', key: \"event time\" },\r\n        { label: 'duration', key: \"duration\" },\r\n        { label: 'type', key: \"type\" },\r\n        { label: 'status', key: \"status\" },\r\n    ];\r\n\r\n    let csvReport = {\r\n        data: CsvData,\r\n        headers: headers,\r\n        filename: 'beemz-events.csv'\r\n    };\r\n\r\n    async function handleChangeEventStatus(id) {\r\n        setLoding(true)\r\n        const response = await axiosPrivate.put(USER_API_URL.eventInactive + id)\r\n        if (response.status == 200) {\r\n            refetch();\r\n            enqueueSnackbar(\"status change successfully \", {\r\n                variant: \"success\",\r\n                anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n                autoHideDuration: 2000,\r\n            });\r\n            setTimeout(() => {\r\n                setLoding(false);\r\n            }, 500);\r\n        } else {\r\n            enqueueSnackbar(\"something went wrong\", {\r\n                variant: \"error\",\r\n                anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n                autoHideDuration: 2000,\r\n            });\r\n            setLoding(false)\r\n        }\r\n    };\r\n\r\n    setTimeout(() => {\r\n        setLoding(false);\r\n    }, 1800);\r\n\r\n    const handleLinkPopupClose = (value) => {\r\n        setOpenLinkPopup(false);\r\n        setId(false)\r\n    };\r\n\r\n    const handleActionPages = (data, flug) => {\r\n        if (flug === 'view') {\r\n            navigate(PATH_DASHBOARD.general.eventDetails, { state: { eventData: data } });\r\n        } else if (flug === 'edit') {\r\n            navigate(PATH_DASHBOARD.general.userEventEdit, { state: { eventData: data } });\r\n        } else {\r\n            navigate(PATH_DASHBOARD.general.eventInvitedUserList, { state: { eventId: data._id } });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loding ? <LoadingScreen /> : <>\r\n                <div className=\"dashboard_header mb-4\">\r\n                    <h4 className=\"app_text_20_semibold mb-0 d-flex align-items-center\">user events</h4>\r\n                    <Stack direction={\"row\"} className=\"d-flex align-items-center\" spacing={2}>\r\n                        {/* csv */}\r\n                        {permissionsData?.event?.substring(1, 2) == \"1\" ?\r\n                            <AppTooltip title=\"export-event\" placement=\"bottom\">\r\n                                <Button className=\"dashboard_light_bg_icon_btn\" >\r\n                                    <CSVLink {...csvReport}><FileUploadOutlinedIcon style={{ fontSize: 18, color: \"#6200ee\" }} /></CSVLink>\r\n                                </Button>\r\n                            </AppTooltip> : ''}\r\n                    </Stack>\r\n                </div>\r\n                <Card>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <UserListHead\r\n                                headLabel={TABLE_HEAD}\r\n                            />\r\n                            {userEventList?.length > 0 ?\r\n                                <TableBody>\r\n                                    {userEventList.length != 0 && userEventList?.map((row) => {\r\n                                        var today = moment().format(\"MMM DD YYYY hh:mm\");\r\n                                        var dateTime = moment(row?.eventDateTime).format(\"MMM DD YYYY hh:mm\");\r\n                                        return (\r\n                                            <StyledTableRow key={row._id}>\r\n                                                <TableCell component=\"th\" scope=\"row\"> {row.title} </TableCell>\r\n                                                <TableCell align=\"left\"> {moment(row?.eventDate).format(\"MMM DD YYYY\")} </TableCell>\r\n                                                <TableCell align=\"left\"> {moment(row?.time, 'hh:mm A').format(\"hh:mm A\")} </TableCell>\r\n                                                <TableCell align=\"left\"> {row?.duration ? row?.duration + ' days' : ''} </TableCell>\r\n                                                <TableCell align=\"left\"> {row?.businessId ? 'business' : 'user'} </TableCell>\r\n                                                <TableCell align=\"left\"> {row?.noOfGuest ?? '-'} </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    {\r\n                                                        (row?.isCancle === 1) ? <Chip label=\"canceled\" className=\"app_status_chip invalid\" /> :\r\n                                                            (today < dateTime) ? <Chip label=\"upcoming\" className=\"app_status_chip accepted\" /> : <Chip label=\"posted\" className=\"app_status_chip posted\" />\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    {row?.isCancle === 1 ?\r\n                                                        <Switch checked={row.status === 1 ? true : false} /> :\r\n                                                        <AppTooltip title=\"change status\" placement=\"bottom\">\r\n                                                            <Switch checked={row.status === 1 ? true : false} onChange={() => handleChangeEventStatus(row._id)} defaultChecked /></AppTooltip>}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <Stack direction=\"row\" spacing={3}>\r\n                                                        <AppTooltip title=\"event edit\" placement=\"bottom\">\r\n                                                            <Button sx={{ \"&:hover\": { bgcolor: \"transparent\" } }} onClick={() => handleActionPages(row, 'edit')} variant=\"text\" className=\"user_list_row_btn\"><EditPenIcon /></Button></AppTooltip>\r\n                                                        <AppTooltip title=\"event view\" placement=\"bottom\">\r\n                                                            <Button sx={{ \"&:hover\": { bgcolor: \"transparent\" } }} onClick={() => handleActionPages(row, 'view')} variant=\"text\" className=\"user_list_row_btn\"><VisibilityIcon /></Button>\r\n                                                        </AppTooltip>\r\n                                                        <AppTooltip title=\"invited users\" placement=\"bottom\">\r\n                                                            <Button sx={{ \"&:hover\": { bgcolor: \"transparent\" } }} onClick={() => handleActionPages(row, 'invite')} variant=\"text\" className=\"user_list_row_btn\"><PeopleAltOutlinedIcon /></Button>\r\n                                                        </AppTooltip>\r\n                                                        {/* csv */}\r\n                                                        <AppTooltip title=\"export-events\" placement=\"bottom\"><Button className=\"dashboard_light_bg_icon_btn\" ><CSVLink {...csvReport}><FileUploadOutlinedIcon style={{ fontSize: 18, color: \"#6200ee\" }} /></CSVLink></Button></AppTooltip>\r\n                                                    </Stack>\r\n                                                </TableCell>\r\n                                            </StyledTableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                                :\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\" colSpan={7} sx={{ py: 5 }}>\r\n                                            <span className=\"app_text_16_semibold\">no data found</span>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>}\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <EventBlockUserPopup newLinkId={id} open={openLinkPopup} onClose={handleLinkPopupClose} />\r\n\r\n                </Card>\r\n            </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BusinessEdit"],"sourceRoot":""}
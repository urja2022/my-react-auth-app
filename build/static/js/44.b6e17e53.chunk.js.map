{"version":3,"sources":["pages/dashboard/Business.jsx"],"names":["require","Business","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","filterName","setFilterName","tableData","setTableData","axiosPrivate","useAxiosPrivate","loding","setLoding","businessType","setBusinessType","Id","setId","BusinessId","setBusinessId","enqueueSnackbar","useSnackbar","permissionsData","useStore","state","permissions","navigate","useNavigate","openEmployeePopup","setOpenEmployeePopup","CsvData","setCsvData","StyledTableRow","styled","TableRow","theme","backgroundColor","background","border","useEffect","arr","map","item","createdAt","Date","toLocaleString","obj","name","userName","isApprove","push","csvReport","data","headers","label","key","filename","descendingComparator","a","b","getBusinessData","get","BUSINESS_API_URL","getBusinessList","params","type","search","limit","response","useQuery","keepPreviousData","isLoading","businessList","refetch","metadata","length","hasMoreData","setTimeout","array","comparator","stabilizedThis","el","index","sort","applySortFilter","getComparator","status","id","put","businessApprove","variant","anchorOrigin","vertical","horizontal","autoHideDuration","completedSchema","Yup","shape","rejectReason","min","max","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","setFieldError","setSubmitting","informationObj","rejectRequest","useMutation","JSON","stringify","onSuccess","handleCloseModal","onError","error","errorData","errors","message","Object","keys","forEach","mutateAsync","openModal","setOpenModal","touched","handleSubmit","setFieldValue","getFieldProps","className","fullWidth","sx","flex","placeholder","onChange","e","target","value","trim","labelId","defaultValue","direction","spacing","title","placement","style","fontSize","color","business_request","substring","headLabel","alignRight","rowCount","total","onRequestSort","event","property","row","i","component","scope","align","moment","format","onClick","PATH_DASHBOARD","general","businessView","businessData","dataId","updateRequest","handleOpenModalUpdate","colSpan","py","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","open","onClose","autoComplete","noValidate","Boolean","helperText","newBusinessId"],"mappings":"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","file":"static/js/44.b6e17e53.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { IconButton, InputBase, Paper, Card, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Box, Select, MenuItem } from \"@material-ui/core\";\r\nimport { styled } from '@mui/material/styles';\r\nimport RefreshOutlinedIcon from '@mui/icons-material/RefreshOutlined';\r\nimport { useQuery } from 'react-query';\r\nimport { BUSINESS_API_URL } from \"src/api/axios\";\r\nimport UserListHead from \"src/components/user/UserListHead\";\r\nimport useAxiosPrivate from \"src/hooks/useAxiosPrivate\";\r\nimport { Stack } from \"@mui/material\";\r\nimport SearchIcon from \"src/svgComponents/SearchIcon\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useStore from 'src/contexts/AuthProvider'\r\nimport LoadingScreen from 'src/components/LoadingScreen'\r\nimport moment from 'moment'\r\nimport { useNavigate } from \"react-router\";\r\nimport { PATH_DASHBOARD } from \"src/routes/paths\";\r\nimport AppTooltip from \"src/components/common/AppTooltip\";\r\nimport { Button, Modal, TextField, FormControl, InputLabel, Chip } from \"@mui/material\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMutation } from \"react-query\";\r\nimport EmployeePopup from \"src/components/user/EmployeePopup\";\r\n// for csv\r\nimport { CSVLink } from \"react-csv\";\r\nimport FileUploadOutlinedIcon from '@mui/icons-material/FileUploadOutlined';\r\n\r\nconst _ = require('lodash');\r\n\r\nexport default function Business() {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('name');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [tableData, setTableData] = useState([]);\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const [loding, setLoding] = useState(true);\r\n  const [businessType, setBusinessType] = useState(3);\r\n  const [Id, setId] = useState(\"\");\r\n  const [BusinessId, setBusinessId] = useState();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const permissionsData = useStore(state => state.permissions);\r\n  const navigate = useNavigate();\r\n  const [openEmployeePopup, setOpenEmployeePopup] = useState(false);\r\n  const [CsvData, setCsvData] = useState([]);\r\n\r\n\r\n  const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: '#ffffff',\r\n\r\n    },\r\n    '&:nth-of-type(even)': {\r\n      background: \"linear-gradient(0deg, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6)), #F4F5F7\",\r\n    },\r\n    // hide last border\r\n    '& td, & th': {\r\n      border: 0,\r\n    },\r\n  }));\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'name', label: 'name', alignRight: false },\r\n    { id: 'userId', label: 'name of user', alignRight: false },\r\n    { id: 'isApprove', label: 'status', alignRight: false },\r\n    { id: 'createdAt', label: 'date', alignRight: false },\r\n    { id: 'action', label: 'action', alignRight: false },\r\n  ];\r\n  // For csv\r\n\r\n  useEffect(() => {\r\n    var arr = [];\r\n    tableData.map((item) => {\r\n      const createdAt = new Date(item?.createdAt).toLocaleString();\r\n      var obj = {\r\n        \"name\": item?.name ? item?.name : '-',\r\n        \"userId\": item?.userName ? item?.userName : '-',\r\n        \"isApprove\": item?.isApprove == 1 ? 'Accepted' : item?.isApprove == 2 ? 'Rejected' : \"Pending\",\r\n        \"createdAt\": createdAt || '-',\r\n      }\r\n      arr.push(obj);\r\n    })\r\n    setCsvData(arr)\r\n  }, [tableData]);\r\n  const headers = [\r\n    { label: \"name\", key: \"name\" },\r\n    { label: \"userId\", key: \"userId\" },\r\n    { label: \"isApprove\", key: \"isApprove\" },\r\n    { label: \"createdAt\", key: \"createdAt\" },\r\n  ];\r\n  let csvReport = {\r\n    data: CsvData,\r\n    headers: headers,\r\n    filename: 'beemz-buisnesses.csv'\r\n  };\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  function applySortFilter(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  async function getBusinessData(page, filterName, businessType) {\r\n    const response = await axiosPrivate.get(BUSINESS_API_URL.getBusinessList, { params: { type: businessType == 3 ? false : businessType, page: page + 1, search: filterName, limit: rowsPerPage } })\r\n    return response.data[0];\r\n  }\r\n\r\n  const { isLoading, data: businessList, refetch } = useQuery(['businessList', page, filterName, businessType], () => getBusinessData(page, filterName, businessType), { keepPreviousData: true, })\r\n\r\n  useEffect(() => {\r\n    if (businessList) {\r\n      setTableData(businessList?.data);\r\n      setRowsPerPage(businessList?.metadata.length != 0 ? businessList?.metadata[0].limit : 10);\r\n    }\r\n    if (businessList?.metadata.length != 0 && businessList?.metadata[0].hasMoreData == true) {\r\n      getBusinessData(page + 1);\r\n    }\r\n    setTimeout(() => {\r\n      setLoding(false);\r\n    }, 1800);\r\n  }, [businessList])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    setTimeout(() => {\r\n      refetch();\r\n    }, 500);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value.trim());\r\n    getBusinessData(page, filterName, businessType);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const filteredUsers = applySortFilter(tableData, getComparator(order, orderBy));\r\n\r\n  async function updateRequest(status, id) {\r\n    const response = await axiosPrivate.put(BUSINESS_API_URL.businessApprove + id, { isApprove: status })\r\n    if (response.status == 200) {\r\n      enqueueSnackbar(\"business accepted successfully\", {\r\n        variant: \"success\",\r\n        anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n        autoHideDuration: 2000,\r\n      });\r\n    } else {\r\n      enqueueSnackbar(\"something went wrong\", {\r\n        variant: \"error\",\r\n        anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n        autoHideDuration: 2000,\r\n      });\r\n    }\r\n    refetch();\r\n  }\r\n\r\n  const completedSchema = Yup.object().shape({\r\n    rejectReason: Yup.string()\r\n      .min(2, \"reason can set of between 2 and 255 characters!\")\r\n      .max(255, \"reason can set of between 2 and 255 characters!\")\r\n      .required(\"reason is required\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      rejectReason: \"\",\r\n    },\r\n    validationSchema: completedSchema,\r\n    onSubmit: async (values, { resetForm, setFieldError, setSubmitting }) => {\r\n      const informationObj = {\r\n        rejectReason: values.rejectReason,\r\n        isApprove: 2\r\n      };\r\n      rejectRequest(informationObj)\r\n      resetForm();\r\n      setSubmitting(false);\r\n      refetch();\r\n    },\r\n  });\r\n  const { mutateAsync: rejectRequest } = useMutation(\r\n    async (data) => {\r\n      return await axiosPrivate.put(BUSINESS_API_URL.businessApprove + Id, JSON.stringify(data))\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        refetch();\r\n        enqueueSnackbar(\"business rejected successfully\", {\r\n          variant: \"success\",\r\n          anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n          autoHideDuration: 2000,\r\n        });\r\n        handleCloseModal();\r\n      },\r\n      onError: (error) => {\r\n        const errorData = error.response.data.errors;\r\n\r\n        if (error.response?.data?.message) {\r\n          enqueueSnackbar(error.response?.data?.message, {\r\n            variant: \"error\",\r\n            anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n            autoHideDuration: 2000,\r\n          });\r\n        } else {\r\n          Object.keys(errorData).forEach((key) => {\r\n            if (key === \"rejectReason\") {\r\n              setFieldError(\"rejectReason\", errorData[key]);\r\n            } else {\r\n              setFieldError(key, errorData[key]);\r\n            }\r\n          });\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleOpenModalUpdate = (row) => {\r\n    setId(row.id)\r\n    setOpenModal(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n  const typeFunction = (type) => {\r\n    setBusinessType(type);\r\n    refetch();\r\n  };\r\n  const { errors, touched, setFieldValue, handleSubmit, setFieldError, getFieldProps } = formik;\r\n\r\n  if (isLoading) return <LoadingScreen />\r\n  const handleRequestView = (data) => {\r\n    navigate(PATH_DASHBOARD.general.businessView, { state: { businessData: data } });\r\n  };\r\n\r\n  const handleClickEmployeePopupOpen = (dataId) => {\r\n    setOpenEmployeePopup(true);\r\n    setBusinessId(dataId);\r\n  };\r\n\r\n  const handleEmployeePopupClose = (value) => {\r\n    setOpenEmployeePopup(false);\r\n    setBusinessId(false)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loding ? <LoadingScreen /> : <>\r\n        <div className=\"dashboard_header mb-4\">\r\n          {/* <h4 className=\"app_text_20_semibold mb-0 d-flex align-items-center\">Users</h4> */}\r\n          <Paper className='dashboard_searchbox col-lg-4'>\r\n            <IconButton>\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              fullWidth\r\n              sx={{ flex: 1 }}\r\n              placeholder=\"search business name...\"\r\n              onChange={(e) => handleFilterByName(e)}\r\n            />\r\n          </Paper>\r\n          <div className=\"form-group w-25\">\r\n            <FormControl fullWidth>\r\n              {/* <InputLabel id=\"demo-simple-select-label\">filter</InputLabel> */}\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label=\"filter\"\r\n                defaultValue={businessType}\r\n                onChange={(e) => typeFunction(e.target.value)}\r\n              >\r\n                <MenuItem value=\"3\">  all </MenuItem>\r\n                <MenuItem value=\"1\" >  accept </MenuItem>\r\n                <MenuItem value=\"2\" >  reject </MenuItem>\r\n                <MenuItem value=\"0\" >  pending </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Stack direction={\"row\"} className=\"d-flex align-items-center\" spacing={2}>\r\n\r\n            <AppTooltip title=\"refresh\" placement=\"bottom\"><Button className=\"dashboard_light_bg_icon_btn\"><RefreshOutlinedIcon style={{ fontSize: 18, color: \"#6200ee\" }} /></Button></AppTooltip>\r\n\r\n            {permissionsData?.business_request?.substring(1, 2) == \"1\"\r\n              ?\r\n              <AppTooltip title=\"export Business\" placement=\"bottom\"><Button className=\"dashboard_light_bg_icon_btn\" ><CSVLink {...csvReport}><FileUploadOutlinedIcon style={{ fontSize: 18, color: \"#6200ee\" }} /></CSVLink></Button></AppTooltip>\r\n              : ''}\r\n          </Stack>\r\n        </div>\r\n\r\n        <Card>\r\n          <TableContainer>\r\n            <Table>\r\n              <UserListHead\r\n                headLabel={TABLE_HEAD}\r\n                rowCount={businessList?.metadata.length !== 0 ? businessList?.metadata[0].total : 0}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n              {tableData.length > 0 ?\r\n                <TableBody>\r\n                  {tableData.map((row, i) => {\r\n                    return (\r\n                      <StyledTableRow key={i}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name ?? \"-\"}\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.userName ?? \"-\"}\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.isApprove === 1 ? <Chip label=\"accepted\" className=\"app_status_chip accepted\" /> : row.isApprove === 2 ? <Chip label=\"rejected\" className=\"app_status_chip invalid\" /> : <Chip label=\"pending\" className=\"app_status_chip pending\" />}\r\n                        </TableCell>\r\n\r\n\r\n\r\n                        <TableCell align=\"left\"> {moment(row.createdAt).format(\"MMM DD YYYY h:mm A\")}</TableCell>\r\n                        <TableCell>\r\n                          <Stack direction=\"row\" spacing={3}>\r\n                            <AppTooltip title=\"view business details\" placement=\"bottom\"><Button className=\"theme_button_view\" variant=\"contained\" onClick={(e) => handleRequestView(row)}>view</Button></AppTooltip>\r\n                            <AppTooltip title=\"employee list\" placement=\"bottom\"><Button className=\"theme_button_view\" variant=\"contained\" onClick={() => handleClickEmployeePopupOpen(row?.id)}>employee</Button></AppTooltip>\r\n                            {permissionsData?.business_request?.substring(3, 4) == \"1\" && row.isApprove === 0 ?\r\n                              <>\r\n                                <AppTooltip title=\"accept business request\" placement=\"bottom\"><Button className=\"theme_button\" variant=\"contained\" onClick={(e) => updateRequest(1, row.id)}>accept</Button></AppTooltip>\r\n                                <AppTooltip title=\"reject business request\" placement=\"bottom\"><Button className=\"invalid_button\" variant=\"contained\" onClick={() => handleOpenModalUpdate(row)}\r\n                                >reject</Button></AppTooltip>\r\n                              </> : ''}\r\n                          </Stack>\r\n                        </TableCell>\r\n                      </StyledTableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n                :\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\" colSpan={5} sx={{ py: 5 }}>\r\n                      <span className=\"app_text_16_semibold\">no data found</span>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>}\r\n\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={[10, 20, 50, 100]}\r\n            count={businessList?.metadata.length != 0 ? businessList?.metadata[0].total : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n        <Modal\r\n          open={openModal}\r\n          onClose={handleCloseModal}\r\n          aria-labelledby=\"child-modal-title\"\r\n          aria-describedby=\"child-modal-description\"\r\n        >\r\n          <Box className=\"modal_card modal_lg db_trust_level_modal_box\">\r\n            <div className=\"modal_card_header\">\r\n              <div className=\"left_part\">\r\n                <h4>rejected reason </h4>\r\n              </div>\r\n              <div className=\"right_part\">\r\n                <Button className=\"dashboard_light_bg_icon_btn\" onClick={handleCloseModal} aria-label=\"delete\">\r\n                  <CloseIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal_card_body\">\r\n              <FormikProvider value={formik}>\r\n                <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className='col-12'>\r\n                      <div className='user_edit_header mb-4'>\r\n                        <h4 className=\"app_text_14_semibold mb-0\">rejected reason information</h4>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"form-group mb-4\">\r\n                        <TextField\r\n                          label='reason'\r\n                          autoComplete='off'\r\n                          fullWidth\r\n                          variant='outlined'\r\n                          {...getFieldProps(\"rejectReason\")}\r\n                          error={Boolean(touched.rejectReason && errors.rejectReason)}\r\n                          helperText={touched.rejectReason && errors.rejectReason}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className=\"my-3 text-lowercase text-white app_bg_primary app_text_16_semibold app_btn_lg\"\r\n                      >\r\n                        submit\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </FormikProvider>\r\n            </div>\r\n            <div className=\"modal_card_footer\"></div>\r\n          </Box>\r\n        </Modal>\r\n        <EmployeePopup newBusinessId={BusinessId} open={openEmployeePopup} onClose={handleEmployeePopupClose} />\r\n      </>\r\n      }\r\n    </>\r\n  )\r\n}"],"sourceRoot":""}
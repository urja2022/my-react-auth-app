{"version":3,"sources":["pages/dashboard/UserDocument.jsx"],"names":["require","UserDocument","useState","tableData","setTableData","page","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","filterName","permissionsData","useStore","state","permissions","axiosPrivate","useAxiosPrivate","enqueueSnackbar","useSnackbar","loding","setLoding","StyledTableRow","styled","TableRow","theme","backgroundColor","background","border","get","USER_API_URL","userDocList","params","search","response","data","useQuery","getTraceRequest","keepPreviousData","isLoading","refetch","useEffect","setTimeout","emptyRows","Math","max","length","status","id","put","updateUserRequest","result","userId","variant","anchorOrigin","vertical","horizontal","autoHideDuration","onRequest","updateTraceRequest","className","headLabel","label","alignRight","rowCount","onRequestSort","event","property","map","row","component","scope","fullName","align","email","document","docType","moment","createdAt","format","direction","spacing","users","substring","title","placement","onClick","e","_id","style","height","colSpan","sx","py"],"mappings":"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","file":"static/js/55.7347b360.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card, Table, TableBody, TableCell, TableContainer, TableRow } from \"@material-ui/core\";\r\nimport { styled } from '@mui/material/styles';\r\nimport { useQuery } from 'react-query';\r\nimport { USER_API_URL } from \"src/api/axios\";\r\nimport UserListHead from \"src/components/user/UserListHead\";\r\nimport useAxiosPrivate from \"src/hooks/useAxiosPrivate\";\r\nimport Stack from '@mui/material/Stack';\r\nimport { useSnackbar } from \"notistack\";\r\nimport LoadingScreen from 'src/components/LoadingScreen'\r\nimport moment from 'moment'\r\nimport Button from '@mui/material/Button';\r\nimport useStore from 'src/contexts/AuthProvider'\r\nimport AppTooltip from \"src/components/common/AppTooltip\";\r\n\r\nconst _ = require('lodash');\r\n\r\nexport default function UserDocument() {\r\n  const [tableData, setTableData] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('name');\r\n  const [filterName, setFilterName] = useState('');\r\n  const permissionsData = useStore(state => state.permissions);\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loding, setLoding] = useState(true);\r\n\r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n    '&:nth-of-type(even)': {\r\n      background: \"linear-gradient(0deg, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6)), #F4F5F7\",\r\n    },\r\n    // hide last border\r\n    '& td, & th': {\r\n      border: 0,\r\n    },\r\n  }));\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'fullName', label: 'name', alignRight: false },\r\n    { id: 'email', label: 'email', alignRight: false },\r\n    { id: 'document type', label: 'document type', alignRight: false },\r\n    { id: 'createdAt', label: 'date', alignRight: false },\r\n    { id: 'action', label: 'action', alignRight: false },\r\n  ];\r\n\r\n  async function getTraceRequest(filterName) {\r\n    const response = await axiosPrivate.get(USER_API_URL.userDocList, { params: { search: filterName } })\r\n    return response.data;\r\n  }\r\n\r\n  const { isLoading, data: userDocList, refetch } = useQuery(['userDocList', filterName], () => getTraceRequest(filterName), { keepPreviousData: true, })\r\n\r\n  useEffect(() => {\r\n    if (userDocList) {\r\n      setTableData(userDocList.data ? [] : userDocList);\r\n      setRowsPerPage(10);\r\n    }\r\n    setTimeout(() => {\r\n      setLoding(false);\r\n    }, 1800);\r\n  }, [userDocList])\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userDocList?.data?.length) : 0;\r\n  const filteredUsers = tableData;\r\n  if (isLoading) return <LoadingScreen />\r\n\r\n  async function updateTraceRequest(status, id) {\r\n    const response = await axiosPrivate.put(USER_API_URL.updateUserRequest, { result: status, userId: id })\r\n    if (response.status == 200) {\r\n      enqueueSnackbar(\"status change successfully \", {\r\n        variant: \"success\",\r\n        anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n        autoHideDuration: 2000,\r\n      });\r\n    } else {\r\n      enqueueSnackbar(\"something went wrong\", {\r\n        variant: \"error\",\r\n        anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n        autoHideDuration: 2000,\r\n      });\r\n    }\r\n    refetch();\r\n  }\r\n\r\n  const onRequest = (status, id) => {\r\n    updateTraceRequest(status, id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loding ? <LoadingScreen /> : <>\r\n        <h4 className=\"app_text_20_semibold mb-0 d-flex align-items-center\">user request</h4>\r\n        <div className=\"dashboard_header mb-4\">\r\n        </div>\r\n        <Card>\r\n          <TableContainer>\r\n            <Table>\r\n              <UserListHead\r\n                headLabel={TABLE_HEAD}\r\n                rowCount={userDocList?.data?.length}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n\r\n              {tableData.length > 0 ?\r\n                <TableBody>\r\n                  {tableData.length != 0 && tableData?.map((row) => {\r\n                    return (\r\n                      <StyledTableRow key={row._id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.fullName}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\"> {row.email}</TableCell>\r\n                        <TableCell align=\"left\"> {row.document.docType}</TableCell>\r\n                        <TableCell align=\"left\"> {moment(row.createdAt).format(\"MMM DD YYYY h:mm A\")}</TableCell>\r\n                        <TableCell>\r\n                          <Stack direction=\"row\" spacing={3}>\r\n                            {permissionsData?.users?.substring(3, 4) == \"1\"\r\n                              ? <>\r\n                                <AppTooltip title=\"accept user request\" placement=\"bottom\"><Button className=\"theme_button\" variant=\"contained\" onClick={(e) => onRequest(1, row._id)}>accept</Button></AppTooltip>\r\n                                <AppTooltip title=\"reject user request\" placement=\"bottom\"><Button className=\"invalid_button\" variant=\"contained\" onClick={(e) => onRequest(0, row._id)}>reject</Button></AppTooltip>\r\n                              </> : ''}\r\n                          </Stack>\r\n                        </TableCell>\r\n                      </StyledTableRow>\r\n                    )\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                :\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\" colSpan={4} sx={{ py: 5 }}>\r\n                      <span className=\"app_text_16_semibold\">no data found</span>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>}\r\n            </Table>\r\n          </TableContainer>\r\n        </Card>\r\n      </>\r\n      }\r\n    </>\r\n  )\r\n}"],"sourceRoot":""}